{
  "proj-dry": {
    "description": "Run duplicate code detection (AccessiList-specific)",
    "commands": ["./scripts/ai-dry.sh"],
    "auto_approve": true,
    "timeout": 60000,
    "on_error": "continue"
  },
  "proj-deploy-check": {
    "description": "Run pre-deployment validation",
    "commands": ["./scripts/deployment/pre-deploy-check.sh"],
    "auto_approve": true,
    "timeout": 30000,
    "on_error": "continue"
  },
  "proj-test-mirror": {
    "description": "Test production mirror configuration (Docker Apache)",
    "commands": [
      "docker compose up -d",
      "sleep 8",
      "BASE_URL=http://127.0.0.1:8080 ./scripts/test-production-mirror.sh"
    ],
    "auto_approve": true,
    "timeout": 120000,
    "on_error": "continue"
  },
  "proj-docker-up": {
    "description": "Start Docker Apache server",
    "commands": [
      "docker compose up -d",
      "echo '‚úÖ Docker Apache started on http://127.0.0.1:8080'"
    ],
    "auto_approve": true,
    "timeout": 30000,
    "on_error": "continue"
  },
  "proj-docker-down": {
    "description": "Stop Docker Apache server",
    "commands": ["docker compose down", "echo '‚úÖ Docker Apache stopped'"],
    "auto_approve": true,
    "timeout": 20000,
    "on_error": "continue"
  },
  "proj-user-testing": {
    "description": "Start PHP dev server for manual testing (port 8000, doesn't conflict with Docker)",
    "commands": [
      "pkill -f 'php -S localhost:8000' 2>/dev/null || true",
      "php -S localhost:8000 router.php > /tmp/accessilist-server.log 2>&1 &",
      "sleep 2",
      "echo '‚úÖ PHP dev server started on http://localhost:8000'",
      "echo 'üìù Test the demo: http://localhost:8000/home'",
      "echo 'üîç View logs: tail -f /tmp/accessilist-server.log'",
      "echo 'üõë Stop server: pkill -f \"php -S localhost:8000\"'"
    ],
    "auto_approve": true,
    "timeout": 10000,
    "on_error": "continue"
  },
  "ai-push-deploy-github": {
    "description": "Push to GitHub and deploy to production (full deployment)",
    "commands": [
      "./scripts/deployment/pre-deploy-check.sh",
      "./scripts/github-push-gate.sh secure-push 'push to github'",
      "echo '‚úÖ Pushed to GitHub - GitHub Actions will deploy automatically'",
      "echo '‚è≥ Waiting for GitHub Actions deployment...'",
      "sleep 30",
      "./scripts/deployment/post-deploy-verify.sh"
    ],
    "auto_approve": false,
    "timeout": 300000,
    "on_error": "continue"
  },
  "ai-push-github": {
    "description": "Push to GitHub only (no deployment)",
    "commands": [
      "./scripts/github-push-gate.sh secure-push 'push to github'",
      "echo '‚úÖ Pushed to GitHub successfully'",
      "echo '‚ÑπÔ∏è  No deployment triggered - code pushed to repository only'"
    ],
    "auto_approve": false,
    "timeout": 60000,
    "on_error": "continue"
  },
  "external-test-production": {
    "description": "Test actual production server at webaim.org",
    "commands": ["./scripts/external/test-production.sh"],
    "auto_approve": true,
    "timeout": 120000,
    "on_error": "continue"
  }
}
