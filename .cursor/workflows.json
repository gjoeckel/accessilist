{
  "proj-dry": {
    "description": "Run duplicate code detection (AccessiList-specific)",
    "commands": ["./scripts/ai-dry.sh"],
    "auto_approve": true,
    "timeout": 60000,
    "on_error": "continue"
  },
  "proj-deploy-check": {
    "description": "Run pre-deployment validation",
    "commands": ["./scripts/deployment/pre-deploy-check.sh"],
    "auto_approve": true,
    "timeout": 30000,
    "on_error": "continue"
  },
  "proj-test-mirror": {
    "description": "Test production mirror configuration (Docker Apache)",
    "commands": [
      "docker compose up -d",
      "sleep 8",
      "BASE_URL=http://127.0.0.1:8080 ./scripts/test-production-mirror.sh"
    ],
    "auto_approve": true,
    "timeout": 120000,
    "on_error": "continue"
  },
  "proj-docker-up": {
    "description": "Start Docker Apache server",
    "commands": [
      "docker compose up -d",
      "echo '‚úÖ Docker Apache started on http://127.0.0.1:8080'"
    ],
    "auto_approve": true,
    "timeout": 30000,
    "on_error": "continue"
  },
  "proj-docker-down": {
    "description": "Stop Docker Apache server",
    "commands": ["docker compose down", "echo '‚úÖ Docker Apache stopped'"],
    "auto_approve": true,
    "timeout": 20000,
    "on_error": "continue"
  },
  "proj-user-testing": {
    "description": "Start PHP dev server for manual testing (port 8000, doesn't conflict with Docker)",
    "commands": [
      "pkill -f 'php -S localhost:8000' 2>/dev/null || true",
      "php -S localhost:8000 router.php > /tmp/accessilist-server.log 2>&1 &",
      "sleep 2",
      "echo '‚úÖ PHP dev server started on http://localhost:8000'",
      "echo 'üìù Test the demo: http://localhost:8000/home'",
      "echo 'üîç View logs: tail -f /tmp/accessilist-server.log'",
      "echo 'üõë Stop server: pkill -f \"php -S localhost:8000\"'"
    ],
    "auto_approve": true,
    "timeout": 10000,
    "on_error": "continue"
  },
  "ai-push-deploy-github": {
    "description": "Push to GitHub and deploy to production (full deployment with file exclusions)",
    "commands": [
      "echo 'üîç Running pre-deployment checks...'",
      "./scripts/deployment/pre-deploy-check.sh",
      "echo 'üì¶ Verifying production file manifest...'",
      "[ -f .deployignore ] && echo '‚úÖ .deployignore found (Method 1)' || echo '‚ö†Ô∏è  .deployignore missing'",
      "[ -f scripts/deployment/upload-production-files.sh ] && echo '‚úÖ upload-production-files.sh found (Method 2)' || echo '‚ö†Ô∏è  upload-production-files.sh missing'",
      "echo 'üöÄ Uploading 89 production files...'",
      "./scripts/deployment/upload-production-files.sh",
      "echo 'üì§ Pushing to GitHub repository...'",
      "./scripts/github-push-gate.sh secure-push 'push to github'",
      "echo '‚úÖ Deployment complete!'",
      "echo 'üß™ Running post-deployment verification...'",
      "./scripts/deployment/post-deploy-verify.sh"
    ],
    "auto_approve": true,
    "timeout": 300000,
    "on_error": "continue"
  },
  "ai-push-github": {
    "description": "Push to GitHub only (no deployment)",
    "commands": [
      "./scripts/github-push-gate.sh secure-push 'push to github'",
      "echo '‚úÖ Pushed to GitHub successfully'",
      "echo '‚ÑπÔ∏è  No deployment triggered - code pushed to repository only'"
    ],
    "auto_approve": true,
    "timeout": 60000,
    "on_error": "continue"
  },
  "external-test-production": {
    "description": "Test actual production server at webaim.org",
    "commands": ["./scripts/external/test-production.sh"],
    "auto_approve": true,
    "timeout": 120000,
    "on_error": "continue"
  },
  "ai-local-commit-safe": {
    "description": "Run tests and commit if passing (enforced testing)",
    "commands": [
      "docker compose up -d",
      "sleep 8",
      "BASE_URL=http://127.0.0.1:8080 ./scripts/test-production-mirror.sh",
      "git add -A",
      "git commit"
    ],
    "auto_approve": false,
    "timeout": 180000,
    "on_error": "stop"
  },
  "ai-local-merge-safe": {
    "description": "Merge current branch to main with enforced testing (safe variant)",
    "commands": [
      "docker compose up -d",
      "sleep 8",
      "BASE_URL=http://127.0.0.1:8080 ./scripts/test-production-mirror.sh",
      "git checkout main",
      "git merge -"
    ],
    "auto_approve": false,
    "timeout": 180000,
    "on_error": "stop"
  },
  "proj-level-1": {
    "description": "Level 1: Analyze root directory (shows ALL files - no changes made)",
    "commands": ["./scripts/organize-level-1-root.sh"],
    "auto_approve": true,
    "timeout": 60000,
    "on_error": "continue"
  },
  "proj-level-1-apply": {
    "description": "Level 1: APPLY root organization (Cursor will ask for approval)",
    "commands": ["./scripts/organize-level-1-apply.sh"],
    "auto_approve": false,
    "timeout": 60000,
    "on_error": "stop"
  },
  "proj-level-2": {
    "description": "Level 2: Analyze folder structure (shows ALL folders - no changes made)",
    "commands": ["./scripts/organize-level-2-folders.sh"],
    "auto_approve": true,
    "timeout": 60000,
    "on_error": "continue"
  },
  "proj-level-2-apply": {
    "description": "Level 2: APPLY folder organization (Cursor will ask for approval)",
    "commands": ["./scripts/organize-level-2-apply.sh"],
    "auto_approve": false,
    "timeout": 60000,
    "on_error": "stop"
  },
  "proj-level-3": {
    "description": "Level 3: Comprehensive global analysis and recommendations (READ ONLY)",
    "commands": ["./scripts/organize-level-3-global.sh"],
    "auto_approve": true,
    "timeout": 60000,
    "on_error": "continue"
  },
  "proj-push-deploy-github": {
    "description": "Deploy to production using explicit file list (89 files only)",
    "commands": [
      "echo 'üîç Verifying deployment manifest...'",
      "[ -f .deployignore ] && echo '‚úÖ Method 1: .deployignore (exclusion list)' || echo '‚ùå Missing .deployignore'",
      "[ -f scripts/deployment/upload-production-files.sh ] && echo '‚úÖ Method 2: upload-production-files.sh (explicit list)' || echo '‚ùå Missing upload script'",
      "echo ''",
      "echo 'üì¶ Production files to upload: 89'",
      "echo '   - Root: 2 files'",
      "echo '   - Config: 1 file'",
      "echo '   - PHP: 18 files'",
      "echo '   - JavaScript: 19 files'",
      "echo '   - CSS: 16 files'",
      "echo '   - Images: 15 files'",
      "echo '   - JSON: 11 files'",
      "echo '   - Sessions: 2 items'",
      "echo ''",
      "echo 'üöÄ Starting production deployment...'",
      "./scripts/deployment/upload-production-files.sh",
      "echo ''",
      "echo 'üì§ Pushing to GitHub...'",
      "./scripts/github-push-gate.sh secure-push 'push to github'",
      "echo ''",
      "echo '‚úÖ Deployment complete! Testing production...'",
      "./scripts/deployment/post-deploy-verify.sh"
    ],
    "auto_approve": false,
    "timeout": 300000,
    "on_error": "stop"
  }
}
