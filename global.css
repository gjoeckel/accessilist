/* Modal Styles - Consolidated */

.modal {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    z-index: 1000;
    width: 90%;
    max-width: 500px;
}

.modal[aria-hidden="false"] {
    display: block;
}

.modal-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 999;
}

.modal-overlay[aria-hidden="false"] {
    display: block;
}

.modal-content {
    position: relative;
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.modal-header h2 {
    margin: 0;
    font-size: 1.5rem;
}

.close-modal {
    background: none;
    border: none;
    font-size: 24px;
    cursor: pointer;
    padding: 0;
    line-height: 1;
}

.modal-buttons {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 20px;
}

/* Base Modal Button Style */
.modal-button,
#cancelButton,
#yesButton {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: bold;
    text-align: center;
    transition: background-color 0.2s;
}

/* Specific Modal Buttons from checklist.css section */
#cancelRestart {
    background-color: #f0f0f0;
    /* Match font style from save-restore.css section */
    font-size: 0.75rem;
    font-weight: bold;
    border: 1px solid #ccc;
    color: #333;
}

#deleteNotes {
    background-color: #ff4444;
    color: white;
}

#saveNotes {
    background-color: #4CAF50;
    color: white;
}

/* Specific Modal Buttons from multiple.css section */
#cancelDeleteInstance {
    background-color: #f0f0f0;
}

#confirmDeleteInstance {
    background-color: #ff4444;
    color: white;
}

/* Specific Modal Buttons from report context */
#confirmDeleteReportRow {
    background-color: #ff4444; /* Match #deleteNotes & #confirmDeleteInstance */
    color: white; /* Match #deleteNotes & #confirmDeleteInstance */
}

/* Specific Modal Buttons from save-restore.css section */
.button-confirm {
  background-color: #4CAF50;
  color: white;
  /* Remove font-size and font-weight here to inherit from .modal-button */
  margin: 4px 2px;
}

#confirmRestartYes {
    /* Uses .button-confirm */
    /* Additional style from global.css */
    background-color: var(--positive-color);
}

#cancelDeleteReportRow {
    /* Match font style from save-restore.css section */
    font-size: 0.75rem;
    font-weight: bold;
    /* Assuming default modal button styles for background, border, color */
    background-color: #f0f0f0;
    border: 1px solid #ccc;
    color: #333;
    margin: 4px 2px; /* Retained from save-restore.css */
}

/* Removed focus/hover styles - Handled by focus.css */ 

/* --- Appended Unassigned Styles --- */

/* Loading overlay styles (from global.css lines ~1627-1639) */
#loadingOverlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.8);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 9999;
}

#loadingSpinner {
    width: 50px;
    height: 50px;
    border: 5px solid #f3f3f3;
    border-top: 5px solid #3498db;
    border-radius: 50%;
    margin-bottom: 20px;
}

#loadingText {
    font-size: 18px;
    color: #333;
}

/* Message Footer Styles (from global.css lines ~1713-1734) */
.message-footer {
    position: fixed;
    bottom: -100px;
    left: 0;
    right: 0;
    background-color: var(--success-color); /* Assuming --success-color is defined, check base.css */
    color: white;
    text-align: center;
    padding: 1rem;
    transition: bottom 0.3s ease-in-out;
    z-index: 1000;
    opacity: 0;
}

.message-footer.show {
    bottom: 0;
    opacity: 1;
}

.message-footer p {
    margin: 0;
    font-size: 1rem;
    font-weight: bold;
}

/* DRY Modal Button Styles */
.modal-cancel-button,
.modal-confirm-button {
    min-width: 120px; /* Standardized width */
    min-height: 44px; /* WCAG minimum touch target */
    padding: 0.5rem 1.5rem;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: bold;
    text-align: center;
    transition: background-color 0.2s;
}

.modal-cancel-button {
    background-color: #333;
    color: white;
}

.modal-confirm-button {
    background-color: #336600; /* Green for confirm actions */
    color: white;
}

.modal-confirm-button.red {
    background-color: #bf1712; /* Red for destructive actions */
}

/* Legacy button IDs for backward compatibility */
#cancelButton {
    background-color: #333;
    color: white;
    border: none;
}

#yesButton {
    background-color: #336600;
    color: white;
    border: none;
} 
/* focus.css - Consolidated from focus-refactor.css block */

/* Remove default outline on focusable elements when focused via keyboard */
textarea:focus-visible,
button:focus-visible,
input:focus-visible,
select:focus-visible {
    outline: none;
}

/* === Standardized Table Interaction Styles (Refactored) === */

/* --- Base Transitions --- */
/* Apply transitions to all elements that will have focus/hover styles */
/* Using :is() to group related elements for transitions */
:is(
  .principles-table .info-link,
  .principles-table .notes-textarea,
  .principles-table .status-button,
  .principles-table .restart-button,
  .principles-button,
  .modal-button,
  #cancelRestart, #confirmRestartYes, #cancelDeleteReportRow, #confirmDeleteReportRow,
  .button-confirm,
  /* .home-button, */ /* Excluded - no animation */
  /* .header-button, */
  /* #saveButton, */
  /* #startButton, */
  /* #refreshButton, */
  .toggle-strip,
  .show-button,
  .delete-button, /* Admin table */
  .admin-delete-button,
  /* .clear-data-button, */
  .camtasia-button,
  /* .checklist-button, */
  .instance-link,
  .heading-content span,
  .side-panel a, /* Ensure transition applies to pseudo-elements */
  select,
  /* Generic fallbacks */
  a,
  button:not(#homeButton), /* Exclude home button from generic button transitions */
  textarea
) {
  transition: background-color 0.2s ease, box-shadow 0.2s ease, border-color 0.2s ease, transform 0.2s ease;
}

/* Default focus styles removed */

/* --- Default Hover Styles (:hover) --- */

/* Default hover styles removed */

/* --- Section-Specific Focus Color Overrides --- */
/* Override default focus color with section's theme color */
/* Uses --theme-color which is set on the section */
/* Using :is() to group elements within each section */

/* Removed section-specific focus overrides in favor of unified Home-style ring */

/* --- Section-Specific Hover Color Overrides --- */
/* Override default hover color with section's theme color */
/* Using :is() to group elements */
/* Combining rules where focus and hover styles are identical */

/* Removed section-specific hover overrides in favor of unified Home-style ring */

/* --- Specific Hover Background Adjustments (Retained from original) --- */
/* Keep subtle background change for most buttons on hover */
:is(
  .principles-table .status-button,
  .principles-table .restart-button,
  .modal-button,
  #cancelRestart,
  #confirmRestartYes,
  #cancelDeleteReportRow,
  #confirmDeleteReportRow,
  .button-confirm,
  /* .home-button, */
  /* .header-button, */
  /* #saveButton, */
  /* #startButton, */
  /* #refreshButton, */
  .toggle-strip,
  .show-button,
  .delete-button, /* Admin table */
  .admin-delete-button,
  /* .clear-data-button, */
  .camtasia-button,
  /* .checklist-button */
  .report-table .report-status-button,
  .report-table .report-delete-button
):hover {
  background-color: inherit; /* Prevent generic darkening */
}



/* Unified green hover/focus background for key action buttons (remove from .checklist-button) */
:is(#yesButton, #refreshButton):is(:hover, :focus-visible) {
    background-color: #478F00;
}

/* Home button background hover/focus (color only) */
#homeButton:hover,
#homeButton:focus-visible {
  background-color: #4482c1; /* Apply button-blue hover */
}

/* Instance link hover style */
.instance-link:hover {
    text-decoration: underline;
    color: var(--primary-color, #0056b3); /* Retained from original */
}


/* --- Side Panel Focus/Hover Indicator (Circular Border) --- */
/* Unchanged from original focus.css */
/* Custom circle styles removed - now using DRY golden ring */

/* Side panel toggle button hover/focus - match Save ring */
.toggle-strip:is(:hover, :focus-visible) {
  box-shadow: var(--golden-ring) !important;
}

.side-panel a:focus-visible img {
  outline: none !important;
}

/* (covered by unified rule above) */

/* Unified red hover/focus background for destructive actions */
:is(.button-red, .clear-data-button):is(:hover, :focus-visible) {
    background-color: #db1b14;
}

/* === Add Row Button Focus/Hover Circle (Moved to table.css) === */

button.info-link:focus {
  border-radius: 5px; /* Adjust value as needed */
}

.side-panel a:focus-visible {
  outline: none;
}

/* === Add Row Button Base Styles (Moved to table.css) === */

/* === Standard Blue Outline for Key Action Buttons (exclude .checklist-button) === */
#yesButton:focus-visible, #yesButton:hover,
#refreshButton:focus-visible, #refreshButton:hover,
.clear-data-button:focus-visible, .clear-data-button:hover,
#adminButton:focus-visible, #adminButton:hover,
#cancelButton:focus-visible, #cancelButton:hover {
  box-shadow: var(--golden-ring) !important;
}

/* Apply Home-like ring (white gap, #333 border, gold outer) to interactive elements */
#saveButton:is(:hover, :focus-visible),
.checklist-button:is(:hover, :focus-visible),
.toggle-strip:is(:hover, :focus-visible),
:is(button, input, select, textarea):is(:hover, :focus-visible),
.instance-link:is(:hover, :focus-visible),
.admin-delete-button:is(:hover, :focus-visible) {
  box-shadow: var(--golden-ring) !important;
}

/* Checklist Info column: rounded hover/focus shape */
.principles-table .info-link:is(:hover, :focus-visible) {
  border-radius: 6px !important;
  box-shadow: var(--golden-ring) !important;
}

/* Admin Instance column: match Checklist Info rounded style */
.instance-link:is(:hover, :focus-visible) {
  border-radius: 6px !important;
  width: 30% !important;
  margin: 0 auto !important;
  display: block !important;
}

/* Focused section headings ring wraps the inner .heading-content for stable layout */
h2:is(:hover, :focus-visible) .heading-content,
.heading-content:is(:hover, :focus-visible) {
  border-radius: 6px !important;
  box-shadow: var(--golden-ring) !important;
}

/* Admin Delete column: match Checklist Restart shape (rounded corners) */
.admin-delete-button:is(:hover, :focus-visible) {
  border-radius: 4px !important;
  width: 60px !important;
  height: 60px !important;
  min-width: 60px !important;
  min-height: 60px !important;
  max-width: 60px !important;
  max-height: 60px !important;
  margin: 0 auto !important;
  display: flex !important;
}

/* Home button hover/focus ring matches Save button's hover ring */
#homeButton:is(:hover, :focus-visible) {
  box-shadow: var(--golden-ring) !important;
}

/* Unified gray hover/focus background for neutral header buttons */
:is(#adminButton, #cancelButton):is(:hover, :focus-visible) {
    background-color: #666666;
}

/* Removed report section-specific overrides in favor of unified Home-style ring */

/* Landing Page Styles - Consolidated */

.landing-content {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin-top: 100px;
    gap: 20px;
}

.checklist-buttons-row {
    display: flex;
    gap: 20px;
    justify-content: center;
    align-items: center;
}

.checklist-button {
    width: 8rem;
    padding: 6px;
    font-size: 18px;
    cursor: pointer;
    background-color: transparent;
    color: #333333;
    border: 1px solid #333333;
    border-radius: 4px;
    transition: background-color 0.3s, box-shadow 0.2s, border-color 0.2s, color 0.2s;
}

button.checklist-button {
    background: #ffffff;
    border: #333 solid 2px;
    color: #333;
    font-weight: bold;
}

.clear-data-button {
    width: 180px;
    padding: 15px;
    font-size: 18px;
    cursor: pointer;
    background-color: #bf1712; /* Apply button-red normal */
    color: white;
    border: none;
    border-radius: 4px;
    transition: background-color 0.3s;
    margin-top: 25px;
}

.camtasia-button {
    /* Positioned absolute in multiple.css block */
    position: absolute;
    top: 150px;
    left: 50%;
    transform: translateX(-50%);
    padding: 0.75rem 1.5rem; /* from multiple.css */
    font-size: 1.1rem; /* from multiple.css */
    background-color: var(--primary-color); /* from multiple.css */
    /* background-color: #8B4513; /* Brown color from checklist.css */
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
    text-align: center; /* from checklist.css */
}

.heading-content {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0; /* controlled by zones */
    text-align: center; /* from multiple.css */
    padding: 0; /* remove direct padding; use zones instead */
}

.heading-left-zone,
.heading-right-zone {
    display: flex;
    align-items: center;
}

.heading-left-zone {
    padding-left: 30px; /* 30px from the left of the image */
}

.heading-right-zone {
    padding-right: 30px; /* 30px from the right of the text */
}

.heading-left-zone img {
    margin-right: 10px;
}

/* Removed focus/hover styles - Handled by focus.css */

/* Responsive checklist group layout - NEW STRUCTURE */
.landing-content.checklist-groups-container {
  width: 100%;
  max-width: 1000px;
  margin: 100px auto 2rem auto;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: flex-start;
  gap: 20px;
  flex-wrap: wrap;
}

.checklist-group {
  display: flex;
  flex-direction: column;
  align-items: center;
  flex: 1 1 300px;
  min-width: 250px;
  margin-bottom: 30px;
}

.checklist-group h2 {
  margin-bottom: 16px;
  text-align: center;
  font-size: 1.3rem;
}

.checklist-buttons-row {
  display: flex;
  gap: 12px;
  justify-content: center;
  flex-wrap: nowrap;
  width: 100%;
  align-items: center;
}

/* Responsive breakpoints to keep buttons under headings */
@media (max-width: 900px) {
  .landing-content.checklist-groups-container {
    flex-direction: column;
    align-items: center;
    gap: 30px;
  }

  .checklist-group {
    flex: none;
    width: 100%;
    max-width: 500px;
    margin-bottom: 0;
  }

  .checklist-group h2 {
    margin-bottom: 12px;
  }
}

/* Breakpoint for when buttons need to wrap due to insufficient space */
@media (max-width: 600px) {
  .checklist-buttons-row {
    gap: 8px;
    flex-wrap: wrap;
    justify-content: center;
  }

  .checklist-button {
    width: 7rem;
    font-size: 16px;
    padding: 8px 4px;
  }

  .checklist-group {
    margin-bottom: 25px;
  }

  .checklist-group h2 {
    font-size: 1.2rem;
    margin-bottom: 10px;
  }
}

/* Even smaller screens - force vertical stacking */
@media (max-width: 480px) {
  .checklist-buttons-row {
    flex-direction: column;
    gap: 8px;
    align-items: center;
  }

  .checklist-button {
    width: 6rem;
    font-size: 14px;
  }
}


/* Admin Page Styles - Consolidated */

/* Admin Section Styles (from multiple.css block) */
.admin-section {
    --theme-color: #666666; /* Added from multiple.css block */
    --header-fill-color: #F7E7D9; /* Added from multiple.css block */
    padding-top: 100px; /* Added from multiple.css block */
    color: var(--theme-color); /* Added from multiple.css block */
    position: relative; /* Added from multiple.css block */
    z-index: 1; /* Added from multiple.css block */
    display: flex; /* Added from multiple.css block */
    flex-direction: column; /* Added from multiple.css block */
    align-items: center; /* Added from multiple.css block */
    padding: 20px; /* from checklist.css block */
    margin-top: 80px; /* from checklist.css block */
}

.admin-section h2 {
    /* color: var(--h2-color); /* Seems unused */
    color: var(--theme-color); /* Use section color */
    font-size: 1.3rem;
    text-align: center;
    margin-bottom: 2rem;
    z-index: 1;
    background-color: transparent;
    padding: 0;
}

/* Admin Table Styles (Prioritizing multiple.css block) */
.admin-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
    max-width: none;
}

.admin-table caption {
    text-align: center;
    font-size: 1.2rem;
    margin-bottom: 1.5rem;
    width: 100%;
}

.admin-table th {
    padding: 8px; /* multiple.css */
    text-align: center !important;
    border-bottom: 1px solid #ddd;
    vertical-align: middle;
    background-color: #f5f5f5;
    font-weight: bold;
    display: table-cell;
}

.admin-table td {
    padding: 8px; /* multiple.css */
    text-align: center;
    border-bottom: 1px solid #ddd;
    vertical-align: middle;
    display: table-cell;
}

.admin-table tr {
    height: 80px; /* from multiple.css */
}

/* Admin Cell Styles */
.admin-date-cell,
.admin-instance-cell,
.admin-action-cell,
.admin-delete-cell {
    text-align: center !important;
    vertical-align: middle;
    padding: 8px;
    display: table-cell;
}

/* Explicit widths from checklist.css (commented out in multiple.css) - Re-evaluate if needed */
.admin-date-cell {
    width: 25%;
}

.admin-instance-cell {
    width: 15%;
    text-align: left !important; /* Overriding general center alignment */
}

.admin-action-cell {
    width: 7%; /* Reduced from checklist.css 20%, matching delete cell */
    padding: 0;
    position: relative;
    min-width: 40px;
}

.admin-delete-cell {
    width: 12%;
    padding: 0;
    position: relative;
    min-width: 40px;
}

.admin-type-cell {
    width: 12%;
    text-align: center !important;
    border: 1px solid #ccc; /* from global.css end block */
    padding: 1rem; /* from global.css end block */
    color: #222; /* from global.css end block */
    vertical-align: middle;
    display: table-cell;
}

.admin-table th.admin-type-cell {
    background-color: #f5f5f5; /* from global.css end block */
    font-weight: bold; /* from global.css end block */
    text-align: center !important;
    vertical-align: middle;
}

/* Delete Button Styles (using admin-delete-button from multiple.css block) */
.admin-delete-button {
    background: none;
    border: none;
    padding: 0;
    margin: 0;
    width: 60px;
    height: 60px;
    min-width: 60px;
    min-height: 60px;
    max-width: 60px;
    max-height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: transform 0.2s ease;
    box-sizing: border-box;
}

.admin-delete-button img {
    width: 60px;
    height: 60px;
    object-fit: contain;
    padding: 4px;
    display: block;
    box-sizing: border-box;
    transition: transform 0.2s ease;
}

/* Older delete button style - keep or remove? Keeping admin-delete-button for consistency */
/* .delete-button { ... } */

/* Instance Link Styles */
.instance-link {
    color: var(--color-link); /* Use variable */
    text-decoration: none;
    display: inline-block;
    text-align: center;
    width: 100%;
}

/* Refresh Button Style (Prioritizing save-restore.css definition via multiple.css) */
#refreshButton {
    background-color: #4CAF50; /* from save-restore.css */
    color: white;
    border: none;
    padding: 8px 16px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 0.75rem;
    font-weight: bold;
    margin: 4px 2px;
    cursor: pointer;
    border-radius: 4px;
    /* margin-top: 20px; /* Older style */
}

/* Removed focus/hover styles - Handled by focus.css */

.admin-container {
    width: 80%;
    max-width: 1500px;
    margin: 0 auto;
}

/* Form Element Styles - DRY Consolidated */

/* ====================================================================
   UNIFIED INPUT STYLES
   Used by: Manual principle rows (.task-input)
   ==================================================================== */
.task-input {
    width: 100%;
    min-height: 75px;
    height: auto;
    box-sizing: border-box;
    resize: none;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 3px;
    font-family: inherit;
    font-size: 1rem;
    line-height: 2; /* User preference: all multiline text line-height of 2 */
    color: #333;
    background-color: #fff;
}

.task-input:focus {
    outline: none;
    border-color: #007cba;
    box-shadow: 0 0 0 2px rgba(0, 124, 186, 0.2);
}

/* ====================================================================
   UNIFIED TEXTAREA STYLES
   Used by: Principle tables (.notes-textarea)
            Report tables (.report-task-textarea, .report-notes-textarea)
   ==================================================================== */
textarea,
.notes-textarea,
.report-task-textarea,
.report-notes-textarea {
    width: 100%;
    min-height: 75px;
    height: auto;
    box-sizing: border-box;
    resize: none;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 3px;
    font-family: inherit;
    font-size: 1rem;
    line-height: 2; /* User preference: all multiline text line-height of 2 */
    color: #333;
    background-color: #fff;
}

/* ====================================================================
   UNIFIED NOTES CELL STYLES
   Used by: Principle tables (.notes-cell)
            Report tables (.report-notes-cell, .report-task-cell)
   ==================================================================== */
.notes-cell,
.report-notes-cell,
.report-task-cell {
    text-align: left;
    vertical-align: top;
    position: relative; /* Needed for absolute positioning of overlay */
}

/* Center the 'Notes' header text in principles tables */
.principles-table th.notes-cell {
    text-align: center;
    vertical-align: middle;
}

/* Legacy text overlay styles removed - overlays no longer used */

/* ====================================================================
   AUTOMATIC ROW TEXT CONTAINERS
   Used by: Automatic (completed task) rows in Report table
   Purpose: Match visual appearance of textareas but read-only
   ==================================================================== */
.report-task-text,
.report-notes-text {
    width: 100%;
    min-height: 75px;
    box-sizing: border-box;
    padding: 8px;
    border: 1px solid #e0e0e0; /* Lighter border for read-only */
    border-radius: 3px;
    font-family: inherit;
    font-size: 1rem;
    line-height: 2; /* User preference: all multiline text line-height of 2 */
    color: #555; /* Slightly muted for read-only */
    background-color: #f9f9f9; /* Light background to indicate read-only */
    white-space: pre-wrap;
    word-wrap: break-word;
    overflow-y: auto;
}

/* Notes cell specific (if needed for report tables) */
.report-notes-cell {
    text-align: left;
    vertical-align: top;
    position: relative;
}

.report-table th.report-notes-cell {
    text-align: center;
    vertical-align: middle;
}

/* Legacy report overlay styles removed - overlays no longer used */

.report-task-cell {
    text-align: left;
    vertical-align: top;
    position: relative;
}

/* Legacy report task overlay styles removed - overlays no longer used */ 
/* Table Styles - Consolidated */

/* Base Table Styles */
table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: var(--spacing-md);
}

caption {
    text-align: left;
    font-size: 1.2rem;
    margin: 0.25rem 2rem 1.5rem 6rem;
}

th, .report-table th {
    border: 1px solid #ccc;
    padding: 1rem;
    vertical-align: middle;
    text-align: center;
    color: var(--th-color, #222);
    background-color: #f2f2f2;
    font-size: 1.25rem;
}

td {
    border: 1px solid #ccc;
    padding: 1rem;
    color: #222;
    text-align: center;
    vertical-align: middle;
    font-size: 1rem;
    line-height: 1.5rem; /* Added line-height from checklist.css for consistency */
}

/* Generic Cell Classes (Principles & Report) */
.task-cell {
    width: 50%;
    padding: 8px;
    vertical-align: middle;
    text-align: left;
    padding-left: 30px;
}

th.task-cell { /* Ensure header alignment matches base th */
    text-align: center;
    vertical-align: middle;
    padding: 1rem; /* Match base th padding */
    font-size: 1.25rem;
}

.info-cell {
    width: 4%;
    padding: 8px;
    vertical-align: middle;
    text-align: center;
}

.notes-cell, .report-notes-cell {
    width: 30%;
    padding: 8px;
    vertical-align: middle;
    text-align: left;
    white-space: normal;
    word-wrap: break-word;
}

.status-cell, .report-status-cell {
    width: 7%;
    text-align: center;
    vertical-align: middle;
    padding: 0;
    position: relative;
    min-width: 40px;
}

.restart-cell {
    width: 7%;
    text-align: center;
    vertical-align: middle;
    padding: 0;
    position: relative;
    min-width: 40px;
}

.delete-cell, .report-delete-cell {
    width: 7%;
    text-align: center;
    vertical-align: middle;
    padding: 0;
}

/* Report Table Specific Cell Classes */
.report-date-cell {
    width: 8%;
    text-align: center;
}

/* Hide Progress column in Principles tables only */
.principles-table th:nth-child(3),
.principles-table td:nth-child(3) {
    /* display: table-cell; /* Corrected from display: none in checklist.css block */
    /* display: none; /* Final state from multiple.css block */
    display: table-cell; /* Ensure column is visible */
}

.report-task-cell {
    width: 46%;
    padding: 8px;
    vertical-align: middle;
    text-align: left;
    padding-left: 30px;
}

.report-notes-cell {
    width: 30%;
    padding: 8px;
    vertical-align: middle;
    text-align: left;
    white-space: normal;
    word-wrap: break-word;
}

.report-status-cell, .report-delete-cell {
    width: 7%;
    text-align: center;
    vertical-align: middle;
    padding: 0;
    position: relative;
    min-width: 40px;
}

/* Report Section Caption */
.report-section h2, #report-caption {
    color: var(--principle--color, #666666);
}

/* --- Interactive Elements within Tables --- */

/* Info Link */
.info-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
}

.info-link img {
    width: 24px;
    height: 24px;
    transition: transform 0.2s ease;
}

/* Status Button (Principles & Report Tables) - DRY Consolidated */
.status-button,
.report-status-button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    transition: background-color 0.2s ease;
    width: 75px;
    height: 75px;
    min-width: 75px;
    min-height: 75px;
    max-width: 75px;
    max-height: 75px;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute; /* Position absolutely within the cell */
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 4px;
    margin: auto;
}

.status-button img,
.report-status-button img {
    width: 100%; /* Scale image to button width */
    height: 100%; /* Scale image to button height */
    object-fit: contain; /* Ensure aspect ratio is maintained */
    padding: 4px; /* Padding around the icon */
}
/* Status image data states handled by JS/HTML */

/* Restart Button (Principles Table) */
.restart-button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    transition: background-color 0.2s ease;
    width: 60px;
    height: 60px;
    min-width: 60px;
    min-height: 60px;
    max-width: 60px;
    max-height: 60px;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 4px;
    margin: auto;
}

.restart-button img {
    width: 60px;
    height: 60px;
    object-fit: contain;
    padding: 4px;
    display: block;
    margin: 0 auto;
}

/* Report Status Display (Image or Button) */
/* Style the image within the report status cell (always present) */
.report-status-cell img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    padding: 4px;
    display: block;
    box-sizing: border-box;
}

/* DRY: Report buttons inherit from base button classes */
/* Report Status Button - now consolidated with .status-button above */

.report-status-button:disabled {
    cursor: default;
}

/* DRY: Report Delete Button - uses same styling as .delete-button */
.report-delete-button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    transition: background-color 0.2s ease;
    width: 70px;
    height: 70px;
    min-width: 70px;
    min-height: 70px;
    max-width: 70px;
    max-height: 70px;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 4px;
    margin: auto;
}

.report-delete-button img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    padding: 4px;
}

/* Removed focus/hover styles - Handled by focus.css */


/* === Principles Table Wrapper and Add Row Buttons === */
.principles-table-wrapper {
    margin-bottom: 1rem;
}

.principles-buttons {
    display: flex;
    justify-content: flex-start;
    margin-top: 0.5rem;
    gap: 0.5rem;
}

/* Principles Add Row buttons - same structure as Report Add Row button */
.principles-button {
    width: 30px;
    height: 30px;
    padding: 0; /* Remove padding to allow img to fill */
    border: none !important; /* Force no border */
    background-color: transparent !important; /* Force transparent background */
    position: relative; /* Needed for pseudo-element positioning */
    border-radius: 50%; /* Always circular to prevent square flash */
}

.principles-button img {
    width: 100%;
    height: 100%;
    object-fit: contain; /* Scale icon nicely */
}

/* DRY Golden ring focus and hover styles for add row buttons */
.principles-button:is(:hover, :focus-visible) {
    outline: none;
    box-shadow: var(--golden-ring) !important;
}

/* === Report Table and Cell Structure Styles === */
.report-table th:nth-child(1),
.report-table td:nth-child(1) {
    width: 8%;
}
.report-table th:nth-child(2),
.report-table td:nth-child(2) {
    width: 46%;
}
.report-table th:nth-child(3),
.report-table td:nth-child(3) {
    width: 30%;
}
.report-table th:nth-child(4),
.report-table td:nth-child(4) {
    width: 8%;
}
.report-table th:nth-child(5),
.report-table td:nth-child(5) {
    width: 8%;
}

.report-date-cell {
    width: 8%;
    padding: 8px;
    vertical-align: middle;
    text-align: center;
}

.report-task-cell {
    width: 46%;
    padding: 8px;
    vertical-align: middle;
    text-align: left;
    padding-left: 30px;
}

th.report-task-cell {
    text-align: center;
    vertical-align: middle;
    padding: 1rem;
    font-size: 1.25rem;
}

.report-notes-cell {
    width: 30%;
    padding: 8px;
    vertical-align: middle;
    text-align: left;
    white-space: normal;
    word-wrap: break-word;
}

.report-status-cell {
    width: 8%;
    text-align: center;
    vertical-align: middle;
    padding: 0;
    position: relative;
    min-width: 40px;
}

.report-delete-cell {
    width: 8%;
    text-align: center;
    vertical-align: middle;
    padding: 0;
    position: relative;
    min-width: 40px;
}

/* === Report Table Interactive Elements === */
/* DRY: Removed duplicate .report-status-button and .report-delete-button definitions */
/* See earlier in file for consolidated DRY versions */

/* === Report Table Textarea Styles === */
/* Note: Textarea styles are now unified in form-elements.css */

/* Legacy overlay styles removed - overlays no longer used */

/* Ensure all report rows have the same base styling */
/* Note: .report-row styles can be added here if needed */

/* --- Universal Status Icon Logic (from buttons.md) --- */
.status-button {
  width: 75px;
  height: 75px;
  min-width: 75px;
  min-height: 75px;
  max-width: 75px;
  max-height: 75px;
  box-sizing: border-box;
}
.restart-button {
  width: 60px;
  height: 60px;
  min-width: 60px;
  min-height: 60px;
  max-width: 60px;
  max-height: 60px;
  box-sizing: border-box;
}
.delete-button {
  width: 70px;
  height: 70px;
  min-width: 70px;
  min-height: 70px;
  max-width: 70px;
  max-height: 70px;
  box-sizing: border-box;
}
.completed-status {
  width: 75px !important;
  height: 75px !important;
  min-width: 75px !important;
  min-height: 75px !important;
  max-width: 75px !important;
  max-height: 75px !important;
  box-sizing: border-box;
  object-fit: contain;
  padding: 0 !important;
  display: block;
  margin: 0 auto;
}
.has-completed-status .report-status-button {
  display: none;
}
.has-completed-status .completed-status {
  display: block;
}

.report-task-cell.completed textarea,
.report-notes-cell.completed textarea {
    border: 1px solid transparent !important;
    pointer-events: none;
    background: #fff;
}
.report-task-cell.completed textarea:hover,
.report-notes-cell.completed textarea:hover {
    border: 1px solid transparent !important;
    background: #fff !important;
    cursor: default;
}

/* Section Styles - Consolidated */

/* Main Content Layout */
main {
    grid-area: main;
    max-width: 90%;
    margin-left: 100px;
    /* min-height: 3000px; /* From multiple.css block - Keep or remove? Keeping checklist.css version */
    padding-bottom: 100vh; /* From checklist.css block */
}

/* Section Styles */
section {
    padding-top: 100px;
    color: var(--theme-color);
    position: relative;
    z-index: 1;
    margin-bottom: 2rem;
}

/* Principle Section Specific Styles */
.principle-section {
    position: relative;
    z-index: 1;
}

/* Report Section Specific Styles */
.report-section {
    position: relative;
    z-index: 1;
    --theme-color: #666666; /* Updated for report section */
    --header-fill-color: #F0F9FF;
}

/* Principle Color Variables */
.principle-section.checklist-1 {
    --theme-color: #005192;
    --header-fill-color: #F0F9FF;
}
.principle-section.checklist-2 {
    --theme-color: #5E850F;
    --header-fill-color: #F7FDED;
}
.principle-section.checklist-3 {
    --theme-color: #AC6628;
    --header-fill-color: #F7E7D9;
}
.principle-section.checklist-4 {
    --theme-color: #0C2336;
    --header-fill-color: #E7ECF0;
}

/* Section Headers - Prioritizing 1.3rem font-size from multiple.css */
.principle-section h2, .report-section h2 {
    color: var(--theme-color); /* Use section's principle color */
    /* color: var(--h2-color); /* This variable seems undefined/unused */
    font-size: 1.3rem; /* From multiple.css block */
    text-align: center;
    margin-bottom: 2rem;
    z-index: 1;
    background-color: transparent;
    padding: 4px;
}

/* Simplified Checklist Caption Styles */
.checklist-caption {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    cursor: pointer;
    border-radius: 6px;
    padding: calc(0.5rem + 4px) calc(1rem + 4px);
    transition: box-shadow 0.2s ease;
    max-width: fit-content;
    white-space: nowrap;
    margin: 0 auto; /* Center the heading above the table */
}

.checklist-caption img {
    flex-shrink: 0;
}

/* DRY Golden ring focus and hover styles - uses CSS custom property */
.checklist-caption:focus,
.checklist-caption:hover {
    outline: none;
    box-shadow: var(--golden-ring) !important;
}

/* Screen Reader Only Class (Included as it was in section blocks) */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/**
 * status.css - Consolidated
 * Styles for status messages (#statusMessageContainer)
 * and the status footer (.status-footer)
 */

/* Status Message Container (from save-restore.css block) */
#statusMessageContainer {
    position: fixed;
    bottom: 20px;
    right: 20px;
    padding: 10px 20px;
    background-color: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 4px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    z-index: 1000;
    min-width: 200px;
    text-align: center;
    transition: opacity 0.3s ease;
}

#statusMessageContainer:empty {
    opacity: 0;
    pointer-events: none;
}

#statusMessageContainer[role="alert"] {
    background-color: #f8d7da;
    border-color: #f5c6cb;
    color: #721c24;
}

#statusMessageContainer[role="status"] {
    background-color: #d4edda;
    border-color: #c3e6cb;
    color: #155724;
}

/* Ensure status container is visible in high contrast mode */
@media (forced-colors: active) {
    #statusMessageContainer {
        border: 2px solid ButtonText;
        background-color: ButtonFace;
        color: ButtonText;
    }
}

/* Status Footer (from status.css block) */
.status-footer {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 30px;
  background: #f0f0f0; /* Temporary background to see the footer */
  border-top: 1px solid #dee2e6;
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-left: 30px;
  padding-right: 30px;
}

.status-content {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 0.875rem;
  line-height: 30px;
}

.status-content img {
  width: 16px;
  height: 16px;
}

/* High contrast mode support for footer */
@media (forced-colors: active) {
  .status-footer {
    border-top: 2px solid ButtonText;
    background: ButtonFace;
  }
} 
/* Side Panel CSS - Consolidated and Deduplicated */

/* :root variables */
:root {
    --side-panel-width: 250px;
    --side-panel-collapsed-width: 60px;
}

/* Base side panel styles */
/* Side Panel Navigation */
.side-panel {
    position: fixed;
    top: 225px;
    left: 0;
    height: 400px;
    width: var(--side-panel-collapsed-width);
    background-color: white;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    z-index: 90;
    transform: translateX(calc(-1 * var(--side-panel-collapsed-width)));
}

/* Add transition only after page load */
body.loaded .side-panel {
    transition: all 0.3s ease;
}

.side-panel[aria-expanded="true"] {
    transform: translateX(0);
}
.side-panel ul {
    list-style: none;
    padding: 0;
    margin: 0;
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
}
.side-panel a {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    padding: 0;
    color: inherit;
    text-decoration: none;
    border-radius: 50%; /* Make circular like add row buttons */
}
/* DRY Golden ring focus and hover styles for side panel links */
.side-panel a:focus,
.side-panel a:hover {
    outline: none;
    box-shadow: var(--golden-ring) !important;
}

.side-panel img {
    width: 36px;
    height: 36px;
}
/* Side Panel Toggle */
.toggle-strip {
    position: absolute;
    right: -21px;
    top: 0;
    width: 21px;
    height: 100%;
    background-color: #ccc;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    color: black;
    font-size: 1rem;
    z-index: 91;
    transition: transform 0.3s ease; /* Note: The original transform was on the arrow, keeping transition here for potential future use */
}
/* DRY Golden ring focus and hover styles for toggle strip */
.toggle-strip:focus,
.toggle-strip:hover {
    outline: none;
    box-shadow: var(--golden-ring) !important;
}

.toggle-arrow {
    transition: transform 0.45s ease;
}
.side-panel[aria-expanded="false"] .toggle-arrow {
    transform: rotate(180deg);
}

/* Media query styles */
@media (max-width: 768px) {
    .side-panel {
        position: fixed; /* Ensure it remains fixed */
        left: 0;
        width: var(--side-panel-collapsed-width); /* Keep collapsed width */
        height: 40vh; /* Adjusted height for smaller screens */
        z-index: 90; /* Ensure proper layering */
        top: 70px; /* Align with sticky header height */
    }
    .side-panel[aria-expanded="false"] {
        transform: translateX(calc(-1 * var(--side-panel-collapsed-width))); /* Keep collapse transform */
    }
    /* Note: Other rules like main margin adjustment are handled in respective testing files */
}

/* Icon state styles (Using .infocus for active state) */
.side-panel a .active-state {
    display: none !important; /* Hide active icon by default */
}

.side-panel a .inactive-state {
    display: block !important; /* Show inactive icon by default */
}

.side-panel a.infocus .active-state {
    display: block !important; /* Show active icon when link has .infocus */
}

.side-panel a.infocus .inactive-state {
    display: none !important; /* Hide inactive icon when link has .infocus */
}

/* Removed debug ::after rules */

/* --- Removed duplicated styles from multiple.css --- */
/* Lines 143-266 (original file) deleted */

/* Header Styles - Consolidated from multiple-side-test.css block */
.sticky-header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 70px;
    background-color: var(--color-header-bg);
    border-bottom: 1px solid var(--color-border);
    z-index: 100;
    display: flex;
    align-items: center;
}
.header-content {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 0 1rem;
    max-width: 1200px;
    margin: 0 auto;
}
.sticky-header h1 {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    margin: 0;
    font-size: 1.5rem;
    color: var(--text-color);
}
/* Header Button Styles */
.header-buttons {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    margin-left: 0;
    margin-right: 0;
    padding-left: 3rem;
    padding-right: 3rem;
}

.home-button {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    padding: 0.5rem 1.5rem;
    border: none;
    border-radius: 4px;
    color: white;
    font-weight: bold;
    font-size: 0.75rem;
    cursor: pointer;
    transition: background-color 0.2s;
    background-color: #336699;
}

.header-button {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    padding: 0.5rem 1.5rem;
    border: none;
    border-radius: 4px;
    color: white;
    font-weight: bold;
    font-size: 0.75rem;
    cursor: pointer;
    transition: background-color 0.2s;
    background-color: #333;
}

/* Save Button - Exact match to Home button except color */
#saveButton {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    padding: 0.5rem 1.5rem;
    border: none;
    border-radius: 4px;
    color: white;
    font-weight: bold;
    font-size: 0.75rem;
    cursor: pointer;
    transition: background-color 0.2s;
    background-color: #478F00;
}

/* Save Button hover state */
#saveButton:hover,
#saveButton:focus-visible {
    background-color: #3a7a00; /* Slightly darker green for hover */
}

/* Other primary action buttons (Start/Yes) */
#startButton,
#yesButton {
    background-color: #336600;
    color: white;
}
/* Secondary action button (Test) */
#testButton {
    color: #222222;
    background-color: #888888;
}
/* Admin button */
#adminButton,
#cancelButton {
    background-color: #333;
    color: white;
}

/* Removed focus/hover styles - Handled by focus.css */ 
@charset "utf-8";
/* CSS Variables */ :root {
    /* Colors */
    --color-text: #333;
    --color-text-light: #666;
    --color-background: #fafafa;
    --color-white: #fff;
    --color-border: #ddd;
    --color-header-bg: #f7f7f7;
    --color-table-header: #f8f9fa;
    --color-link: #336699;
    /* Theme Colors */
    --primary-color: #007bff;
    --secondary-color: #6c757d;
    --warning-color: #ffc107;
    --info-color: #17a2b8;
    --light-color: #f8f9fa;
    --dark-color: #343a40;
    --border-color: #dee2e6;
    --text-color: #212529;
    --background-color: #ffffff;
    /* Layout Dimensions */
    --header-height: 60px;
    /* --side-panel-width: 250px; <-- Removed */
    /* --side-panel-collapsed-width: 60px; <-- Removed */
    /* Spacing */
    --spacing-xs: 0.25rem;
    --spacing-sm: 0.5rem;
    --spacing-md: 1rem;
    --spacing-lg: 1.5rem;
    --spacing-xl: 2rem;
    /* Typography */
    --font-size-sm: 0.9rem;
    --font-size-base: 1rem;
    --font-size-lg: 1.2rem;
    --font-size-xl: 1.5rem;
    --font-size-2xl: 1.6rem;
    --font-size-3xl: 2em;
    /* Interactive Elements */
    --golden-ring: 0 0 0 1px white, 0 0 0 2px #333, 0 0 0 4px #FFD700;
}
/* Reset & Base Styles */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: Calibri, sans-serif;
}
body {
    font-family: Calibri, sans-serif;
    background-color: #fff;
    color: #000;
    margin: 0;
    cursor: default;
}

h1 {
    font-size: 1.75rem;
}

h2 {
    font-size: 1.5rem;
}

p {
    font-size: 1rem;
}

/* Prevent body scroll when modal is open */
body.modal-open {
    overflow: hidden;
}

/* === Focus & Hover Strategy ===

Primary Indicator:
- box-shadow is used as the main indicator for both keyboard focus (:focus-visible)
  and mouse hover (:hover) states for most interactive elements,
  particularly within table rows (principles, report) and section content.
  The color often uses the section's --theme-color variable.

Exceptions:
- Background Color Changes (background-color):
    - Main action buttons (.button-red, .button-green, .button-blue,
      #saveButton, #homeButton, etc.) change background color for
      both :hover and :focus-visible states.
- Border on Pseudo-element (border-color on ::after):
    - Side panel links (.side-panel a) use a circular border on ::after
      for :hover and :focus-visible.
- Box-Shadow (box-shadow):
- Text Decoration (text-decoration):
    - Instance links (.instance-link) use text-decoration: underline
      on :hover.
- Transform (transform):
    - Info links (.principles-table .info-link) use transform: scale(1.1)
      on :hover.
*/

/* === Base Button Styles === */
.button-red,
.button-green,
.button-blue {
    padding: 0.5rem 1rem; /* Example padding */
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    text-align: center;
    text-decoration: none;
    color: white;
    transition: background-color 0.2s ease;
}

/* Red Button */
.button-red {
    background-color: #bf1712;
}

.button-red:hover,
.button-red:focus-visible {
    background-color: #db1b14;
}

/* Green Button */
.button-green {
    background-color: #336600;
}

.button-green:hover,
.button-green:focus-visible {
    background-color: #478F00;
}

/* Blue Button */
.button-blue {
    background-color: #336699;
}

.button-blue:hover,
.button-blue:focus-visible {
    background-color: #4482c1;
}

/* Apply standard blue shadow to core button types on hover/focus */
/* Removed from :is() group: .button-blue, .button-red, .button-green */

/*# sourceMappingURL=data:application/json;base64, */